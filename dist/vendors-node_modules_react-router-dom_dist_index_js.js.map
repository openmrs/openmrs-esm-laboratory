{"version":3,"file":"vendors-node_modules_react-router-dom_dist_index_js.js","mappings":"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","sources":["webpack://@ugandaemr/openmrs-esm-laboratory-app/./node_modules/@remix-run/router/dist/router.js","webpack://@ugandaemr/openmrs-esm-laboratory-app/./node_modules/react-router-dom/dist/index.js","webpack://@ugandaemr/openmrs-esm-laboratory-app/./node_modules/react-router/dist/index.js"],"sourcesContent":["/**\n * @remix-run/router v1.8.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i],\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n  return matches;\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nclass ErrorResponse {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future = _extends({\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  let initialized =\n  // All initialMatches need to be loaded before we're ready.  If we have lazy\n  // functions around still then we'll need to run them in initialize()\n  !initialMatches.some(m => m.route.lazy) && (\n  // And we have to either have no loaders or have been provided hydrationData\n  !initialMatches.some(m => m.route.loader) || init.hydrationData != null);\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }));\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      // Create a GET request for the loaders\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    });\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename);\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}, updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      return {\n        shortCircuited: true\n      };\n    }\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }));\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        let loadingFetcher = getLoadingFetcher(submission);\n        state.fetchers.set(key, loadingFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return startRedirectNavigation(state, actionResult, {\n          submission,\n          isFetchActionRedirect: true\n        });\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, {\n      [match.route.id]: actionResult.data\n    }, undefined // No need to send through errors since we short circuit above\n    );\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)\n      }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined);\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, manifest, mapRouteProperties, basename);\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(state, redirect, _temp) {\n    let {\n      submission,\n      replace,\n      isFetchActionRedirect\n    } = _temp === void 0 ? {} : _temp;\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n    let redirectLocation = createLocation(state.location, redirect.location, // TODO: This can be removed once we get rid of useTransition in Remix v2\n    _extends({\n      _isRedirect: true\n    }, isFetchActionRedirect ? {\n      _isFetchActionRedirect: true\n    } : {}));\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\");\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let activeSubmission = submission || getSubmissionFromNavigation(state.navigation);\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: getLoadingNavigation(redirectLocation),\n        fetcherSubmission: activeSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // If we have a submission, we will preserve it through the redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, activeSubmission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename)), ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => createUseMatchesMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(request, _temp2) {\n    let {\n      requestContext\n    } = _temp2 === void 0 ? {} : _temp2;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(request, _temp3) {\n    let {\n      routeId,\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, {\n        isStaticRequest: true,\n        isRouteRequest,\n        requestContext\n      });\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      });\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, {\n      isStaticRequest: true,\n      isRouteRequest,\n      requestContext\n    }))]);\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getPathContributingMatches(contextualMatches).map(m => m.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate:\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired ||\n      // Clicked the same link, resubmitted a GET form\n      currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some(m => m.route.id === f.routeId)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\nasync function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let resultType;\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: opts.requestContext\n    }), abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([runHandler(handler), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            data: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  if (isResponse(result)) {\n    let status = result.status;\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location);\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null\n      };\n    }\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse = {\n        type: resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result\n      };\n      throw queryRouteResponse;\n    }\n    let data;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp4) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp4 === void 0 ? {} : _temp4;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponse(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return {\n        result,\n        idx: i\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || obj.type === ResultType.error);\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n      \" _hasFetcherDoneAnything \": true\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n      \" _hasFetcherDoneAnything \": true\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n    \" _hasFetcherDoneAnything \": true\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n    \" _hasFetcherDoneAnything \": true\n  };\n  return fetcher;\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router DOM v6.15.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, ErrorResponse, UNSAFE_invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n  _excluded3 = [\"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref3;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset\n    } = _ref4,\n    rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children\n    } = _ref5,\n    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  let submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset\n    } = _ref6,\n    props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      state,\n      relative,\n      preventScrollReset\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      state: options.state,\n      fromRouteId: currentRouteId\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    let submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher() {\n  var _route$matches;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref8) {\n  let {\n    when,\n    message\n  } = _ref8;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router v6.15.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match;\n    // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","Action","PopStateEventType","createMemoryHistory","options","clampIndex","n","Math","min","max","entries","getCurrentLocation","index","createMemoryLocation","to","state","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","initialEntries","initialIndex","v5Compat","map","entry","undefined","action","Pop","listener","history","createURL","URL","encodeLocation","path","parsePath","search","hash","push","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","fn","createBrowserHistory","createBrowserLocation","window","globalHistory","usr","createBrowserHref","getUrlBasedHistory","createHashHistory","createHashLocation","substr","startsWith","createHashHref","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","validateHashLocation","invariant","value","message","Error","cond","console","warn","e","createKey","random","toString","getHistoryState","idx","current","_ref","parsedPath","searchIndex","getLocation","validateLocation","getIndex","handlePop","historyState","pushState","error","DOMException","name","replaceState","origin","defaultView","addEventListener","removeEventListener","ResultType","immutableRouteKeys","Set","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","treePath","id","join","children","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","meta","caseSensitive","childrenIndex","joinPaths","routesMeta","concat","score","computeScore","forEach","_route$path","includes","explodeOptionalSegments","exploded","result","segments","split","first","rest","isOptional","endsWith","required","restExploded","subpath","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","siblings","every","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","generatePath","originalPath","prefix","p","String","array","isLastSegment","star","keyMatch","optional","param","pattern","compilePath","matcher","paramNames","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","regexpSource","_","RegExp","decodeURI","decodeURIComponent","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","getToPathname","paths","json","data","init","responseInit","status","headers","Headers","has","set","Response","AbortedDeferredError","DeferredData","pendingKeysSet","subscribers","deferredKeys","Array","isArray","reject","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","trackPromise","done","add","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","undefinedError","emit","settledKey","subscriber","subscribe","cancel","abort","v","k","resolveData","resolve","size","unwrappedData","_ref2","unwrapTrackedPromise","pendingKeys","isTrackedPromise","_tracked","_error","_data","defer","redirect","redirectDocument","response","ErrorResponse","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","createRouter","initialize","unlistenHistory","historyAction","ignoreNextHistoryUpdate","blockerFunctions","blockerKey","shouldBlockNavigation","currentLocation","updateBlocker","blockers","Map","updateState","startNavigation","initialized","router","dispose","clear","pendingNavigationController","fetchers","deleteFetcher","deleteBlocker","newState","completeNavigation","_location$state","_location$state2","isActionReload","actionData","navigation","isMutationMethod","_isRedirect","keys","loaderData","mergeLoaderData","errors","preventScrollReset","pendingPreventScrollReset","inFlightDataRoutes","dataRoutes","isUninterruptedRevalidation","pendingAction","revalidation","restoreScrollPosition","getSavedScrollPosition","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","revalidate","interruptActiveLoads","startUninterruptedRevalidation","overrideNavigation","getFetcher","fetch","routeId","opts","isServer","fetchControllers","abortFetcher","routesToUse","normalizedPath","normalizeTo","future","v7_prependBasename","relative","setFetcherError","getInternalRouterError","normalizeNavigateOptions","v7_normalizeFormMethod","submission","getTargetMatch","handleFetcherAction","fetchLoadMatches","handleFetcherLoader","cancelActiveDeferreds","boundaryMatch","findNearestBoundary","fetcher","fetchReloadIds","fetchRedirectIds","markFetchersDone","doneFetcher","getDoneFetcher","markFetchRedirectsDone","doneKeys","updatedFetchers","abortStaleFetchLoads","landedId","yeetedKeys","getBlocker","blocker","newBlocker","blockerFunction","predicate","cancelledRouteIds","activeDeferreds","dfd","enableScrollRestoration","positions","getPosition","getKey","savedScrollPositions","getScrollPosition","getScrollRestorationKey","initialScrollRestored","y","getScrollKey","m","createUseMatchesMatch","saveScrollPosition","_internalSetRoutes","newRoutes","routerWindow","isBrowser","createElement","detectErrorBoundary","hydrationData","initialMatches","initialErrors","getShortCircuitMatches","lazy","loader","incrementingLoadId","pendingNavigationLoadId","navigate","userReplace","fromRouteId","pendingError","loadingNavigation","notFoundMatches","request","pendingActionData","actionOutput","shortCircuited","isHashChangeOnly","createClientSideRequest","handleAction","pendingActionError","getLoadingNavigation","Request","handleLoaders","fetcherSubmission","actionMatch","getSubmittingNavigation","type","method","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","isDeferredResult","activeSubmission","getMatchesToLoad","matchesToLoad","revalidatingFetchers","abortPendingFetchRevalidations","results","loaderResults","fetcherResults","fetcherKey","processLoaderData","didAbortFetchLoads","shouldUpdateFetchers","getSubmissionFromNavigation","rf","revalidatingFetcher","getLoadingFetcher","f","callLoadersAndMaybeResolveData","findRedirect","deferredData","requestMatches","existingFetcher","abortController","fetchRequest","originatingLoadId","actionResult","loadingFetcher","revalidationRequest","loadId","loadFetcher","getSubmittingFetcher","isFetchActionRedirect","staleKey","resolveDeferredData","_temp","redirectLocation","isDocumentReload","redirectHistoryAction","_isFetchActionRedirect","reloadDocument","currentMatches","fetchersToLoad","all","resolveDeferredResults","_internalFetchControllers","_internalActiveDeferreds","UNSAFE_DEFERRED_SYMBOL","Symbol","createStaticHandler","query","_temp2","requestContext","methodNotAllowedMatches","isValidMethod","statusCode","loaderHeaders","actionHeaders","queryImpl","isResponse","queryRoute","_temp3","_result$activeDeferre","find","values","routeMatch","submit","loadRouteData","isQueryRouteResponse","isRedirectResponse","isRouteRequest","context","loaderRequest","isStaticRequest","Location","executedLoaders","getLoaderMatchesUntilBoundary","processRouteLoaderData","fromEntries","getStaticContextFromError","newContext","_deepestRenderedBoundaryId","isSubmissionNavigation","body","prependBasename","contextualMatches","activeRouteMatch","hasNakedIndexQuery","normalizeFormMethod","isFetcher","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","URLSearchParams","_ref3","parse","searchParams","convertFormDataToSearchParams","convertSearchParamsToFormData","append","boundaryId","boundaryMatches","findIndex","currentUrl","nextUrl","navigationMatches","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","staticRouteValue","isPropertyStaticallyDefined","resultType","onReject","runHandler","handler","isSameBasename","queryRouteResponse","contentType","_result$init","_result$init2","protocol","isDeferredData","deferred","foundError","newLoaderData","mergedLoaderData","eligibleMatches","reverse","_temp4","errorMessage","obj","signals","isRevalidatingLoader","unwrap","getAll","handle","pathMatches","UNSAFE_DeferredData","UNSAFE_convertRoutesToDataRoutes","UNSAFE_getPathContributingMatches","UNSAFE_invariant","UNSAFE_warning","React","UNSAFE_mapRouteProperties","Router","UNSAFE_NavigationContext","useHref","useResolvedPath","useLocation","UNSAFE_DataRouterStateContext","useNavigate","UNSAFE_useRouteId","UNSAFE_RouteContext","useMatches","useNavigation","unstable_useBlocker","UNSAFE_DataRouterContext","Await","MemoryRouter","Navigate","NavigationType","Outlet","Route","RouterProvider","Routes","UNSAFE_LocationContext","createMemoryRouter","createRoutesFromChildren","createRoutesFromElements","renderMatches","useActionData","useAsyncError","useAsyncValue","useInRouterContext","useLoaderData","useMatch","useNavigationType","useOutlet","useOutletContext","useParams","useRevalidator","useRouteError","useRouteLoaderData","useRoutes","_objectWithoutPropertiesLoose","excluded","sourceKeys","defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","button","createSearchParams","getSearchParamsForLocation","locationSearch","defaultSearchParams","_formDataSupportsSubmitter","isFormDataSubmitterSupported","supportedFormEncTypes","getFormEncType","encType","process","env","NODE_ENV","getFormSubmissionInfo","attr","form","_excluded","_excluded2","_excluded3","createBrowserRouter","parseHydrationData","createHashRouter","_window","__staticRouterHydrationData","deserializeErrors","serialized","val","__type","__subType","ErrorConstructor","stack","START_TRANSITION","startTransitionImpl","BrowserRouter","historyRef","useRef","useState","setStateImpl","v7_startTransition","setState","useCallback","useLayoutEffect","navigationType","navigator","HashRouter","HistoryRouter","displayName","Link","forwardRef","LinkWithRef","_ref4","ref","handleClick","onClick","defaultPrevented","internalOnClick","useContext","absoluteHref","isExternal","targetUrl","useLinkClickHandler","NavLink","NavLinkWithRef","_ref5","ariaCurrentProp","classNameProp","className","style","styleProp","routerState","nextLocationPathname","isActive","isPending","ariaCurrent","Form","props","useSubmit","FormImpl","_ref6","forwardedRef","onSubmit","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref7","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","useDataRouterState","replaceProp","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","useMemo","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","UseSubmit","currentRouteId","useSubmitFetcher","fetcherRouteId","UseSubmitFetcher","routeContext","createFetcherForm","FetcherForm","fetcherId","useFetcher","_route$matches","UseFetcher","load","fetcherWithComponents","useEffect","useFetchers","UseFetchers","SCROLL_RESTORATION_STORAGE_KEY","UseScrollRestoration","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","sessionPositions","getItem","getKeyWithoutBasename","disableScrollRestoration","scrollTo","el","getElementById","scrollIntoView","useBeforeUnload","callback","capture","usePrompt","_ref8","when","confirm","setTimeout","UNSAFE_useScrollRestoration","unstable_HistoryRouter","unstable_usePrompt","DataRouterContext","createContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","joinedPathname","navigateEffectWarning","useIsomorphicLayoutEffect","cb","isStatic","static","useNavigateStable","useNavigateUnstable","dataRouterContext","routePathnamesJson","activeRef","OutletContext","Provider","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","element","Component","renderedMatches","_renderMatches","DefaultErrorComponent","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","Fragment","fontStyle","defaultErrorElement","RenderErrorBoundary","componentDidCatch","errorInfo","render","component","getDerivedStateFromError","getDerivedStateFromProps","RenderedRoute","staticContext","errorElement","ErrorBoundary","_dataRouterState2","_dataRouterState","errorIndex","reduceRight","getChildren","useRouteContext","useCurrentRouteId","thisRoute","useRouteId","UseRouteId","UseNavigation","UseRevalidator","UseMatches","UseLoaderData","UseRouteLoaderData","UseActionData","_state$errors","UseRouteError","blockerId","useBlocker","shouldBlock","UseBlocker","setBlockerKey","UseNavigateStable","alreadyWarned","fallbackElement","DataRoutes","jsonPath","_props","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","pending","success","renderError","toRender","Children","isValidElement","updates","UNSAFE_useRoutesImpl"],"sourceRoot":""}